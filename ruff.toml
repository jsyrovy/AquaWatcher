lint.select = ["ALL"]
lint.ignore = [
    "BLE001", # Do not catch blind exception
    "DTZ", # flake8-datetimez
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__
    "EM101", # Exception must not use a string literal, assign to variable first
    "EM102", # Exception must not use an f-string literal, assign to variable first
    "FBT001", # Boolean-typed positional argument in function definition
    "FBT002", # Boolean default positional argument in function definition
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "T201", # print found
    "TRY002", # Create your own exception
    "TRY003", # Avoid specifying long messages outside the exception class
]
line-length = 120
target-version = "py313"

[lint.per-file-ignores]
"__init__.py" = [
    "F401", # imported but unused
]
"tests/*" = [
    "ANN001", # Missing type annotation for function argument
    "ANN201", # Missing return type annotation for public function
    "ANN202", # Missing return type annotation for private function
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
    "S101", # Use of assert detected
    "SLF001", # Private member accessed
]
